<!--
  ~ e2immu: a static code analyser for effective and eventual immutability
  ~ Copyright 2020-2021, Bart Naudts, https://www.e2immu.org
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the
  ~ terms of the GNU Lesser General Public License as published by the Free Software
  ~ Foundation, either version 3 of the License, or (at your option) any later version.
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY
  ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
  ~ more details. You should have received a copy of the GNU Lesser General Public
  ~ License along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<root>
    <item name='java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.AsynchronousByteChannel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.AsynchronousByteChannel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.channels.Channels java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
  <item name='java.nio.channels.SelectableChannel int validOps()'>
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="flagsFromClass" val="java.nio.channels.SelectionKey.class" />
    </annotation>
  </item>
  <item name='java.nio.channels.SelectableChannel java.nio.channels.SelectionKey register(java.nio.channels.Selector, int) 1'>
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="flagsFromClass" val="java.nio.channels.SelectionKey.class" />
    </annotation>
  </item>
  <item
      name='java.nio.channels.SelectableChannel java.nio.channels.SelectionKey register(java.nio.channels.Selector, int, java.lang.Object) 1'>
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="flagsFromClass" val="java.nio.channels.SelectionKey.class" />
    </annotation>
  </item>
  <item name='java.nio.channels.SelectionKey int interestOps()'>
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="flagsFromClass" val="java.nio.channels.SelectionKey.class" />
    </annotation>
  </item>
  <item name='java.nio.channels.SelectionKey java.nio.channels.SelectionKey interestOps(int) 0'>
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="flagsFromClass" val="java.nio.channels.SelectionKey.class" />
    </annotation>
  </item>
  <item name='java.nio.channels.SelectionKey int readyOps()'>
    <annotation name="org.intellij.lang.annotations.MagicConstant">
      <val name="flagsFromClass" val="java.nio.channels.SelectionKey.class" />
    </annotation>
  </item>
</root>