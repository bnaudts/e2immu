<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ e2immu: a static code analyser for effective and eventual immutability
  ~ Copyright 2020-2021, Bart Naudts, https://www.e2immu.org
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the
  ~ terms of the GNU Lesser General Public License as published by the Free Software
  ~ Foundation, either version 3 of the License, or (at your option) any later version.
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY
  ~ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
  ~ more details. You should have received a copy of the GNU Lesser General Public
  ~ License along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<root>
  <item name='java.nio.Buffer java.lang.Object array()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer clear()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer flip()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer limit(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer mark()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer position(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer reset()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.Buffer java.nio.Buffer rewind()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name="java.nio.ByteBuffer byte[] array()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer order(java.nio.ByteOrder)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer order(java.nio.ByteOrder) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putChar(char)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putChar(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putDouble(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putFloat(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putInt(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putLong(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putShort(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer putShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.CharBuffer asCharBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.DoubleBuffer asDoubleBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.FloatBuffer asFloatBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.IntBuffer asIntBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.LongBuffer asLongBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="java.nio.ByteBuffer java.nio.ShortBuffer asShortBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name='java.nio.CharBuffer char[] array()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name="java.nio.CharBuffer int read(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer allocate(int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer asReadOnlyBuffer()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer compact()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer duplicate()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[])'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[]) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[], int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer get(char[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(char)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[])'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[]) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[], int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(char[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(int, char)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String, int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String, int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.nio.CharBuffer)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer put(java.nio.CharBuffer) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer slice()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[])'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[]) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[], int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(char[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence, int, int)'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence, int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='java.nio.HeapCharBuffer HeapCharBuffer(char[], int, int) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
</root>

