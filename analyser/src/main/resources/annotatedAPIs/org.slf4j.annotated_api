/*
 * e2immu-annot: annotations for effective and eventual immutability
 * Copyright 2020, Bart Naudts, https://www.e2immu.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * -------
 *
 * The content of this file reflects a part of the public API
 * of the Slf4J library. The only intended contribution of the
 * e2immu-annot project is to annotate some of the the publicly accessible
 * classes, methods and fields. The fact that this file resembles the Java
 * syntax is only done to facilitate the description and storage of the association
 * between annotations and the publicly accessible API elements of the Slf4J library.
 */
package org.slf4j;

import org.e2immu.annotation.NotModified;
import org.e2immu.annotation.NotNull;

public interface Logger {
    final public String ROOT_LOGGER_NAME = "ROOT";

    public void info(@NotNull String s, Object... objects) {
    }

    public void warn(@NotNull String s, Object... objects) {
    }

    public void error(@NotNull String s, Object... objects) {
    }

    @NotModified
    public void debug(@NotNull String s, Object... objects) {
    }

    @NotModified
    public void debug(@NotNull String s) {
    }
}

public interface ILoggerFactory {
    @NotNull
    public Logger getLogger(String name);
}

public class LoggerFactory {
    @NotNull
    public static Logger getLogger(@NotNull Class<?> clazz) {
    }

    @NotNull
    public static Logger getLogger(@NotNull String string) {
    }

    @NotNull
    public static ILoggerFactory getILoggerFactory() {
    }
}

