/*
 * e2immu-annot: annotations for effective and eventual immutability
 * Copyright 2020, Bart Naudts, https://www.e2immu.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * -------
 *
 * The content of this file reflects a part of the public API
 * of the Java SDK. The only intended contribution of the
 * e2immu-annot project is to annotate some of the the publicly accessible
 * classes, methods and fields. The fact that this file resembles the Java
 * syntax is only done to facilitate the description and storage of the association
 * between annotations and the publicly accessible API elements of the Java SDK.
 */
package java.io;

import org.e2immu.annotation.Container;
import org.e2immu.annotation.NotModified;

public class IOException extends Exception {
    public IOException() {
    }

    public IOException(String msg) {
    }

    public IOException(String msg, Throwable cause) {
    }

    public IOException(Throwable cause) {
    }
}

// a PrintStream only has StaticSideEffectsOnly when used in a static context, like
// System.out.println(...) !!

@Container
public class PrintStream {
    public void print(char c) {
    }

    public void print(boolean b) {
    }

    public void print(int i) {
    }

    public void print(float f) {
    }

    public void print(long l) {
    }

    public void print(String s) {
    }

    public void print(@NotModified Object obj) {
    }

    public void println(char c) {
    }

    public void println(boolean b) {
    }

    public void println(int i) {
    }

    public void println(float f) {
    }

    public void println(long l) {
    }

    public void println(String s) {
    }

    public void println(@NotModified Object obj) {
    }
}